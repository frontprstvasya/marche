<?php
/**
 * Implements hook_schema().
 *
 */
function dm_chat_schema(): array {
  $schema = [];

  $schema['dm_chat_message'] = [
    'fields' => [
      'message_id' => [
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'description' => 'ID of chat message.',
      ],
      'uid' => [
        'description' => 'Message author',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'dm_chat_room' => [
        'description' => 'Name chat room',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'message' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'description' => 'Chat message',
      ],
      'timestamp' => [
        'description' => 'The Unix timestamp when the XMPP account was created',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
    ],
    'primary key' => ['message_id'],
    'indexes' => [
      'ws_room' => ['dm_chat_room'],
      'uid' => ['uid'],
    ],
  ];
  $schema['dm_chat_room'] = [
    'fields' => [
      'room' => [
        'description' => 'Name chat room',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'seller' => [
        'description' => 'Uid salesman',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'buyer' => [
        'description' => 'Uid a person who makes a purchase',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'arbitrage' => [
        'description' => 'Uid solves disputes',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ],
      'nid' => [
        'description' => 'Seller nods number',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
    ],
    'primary key' => ['room'],
    'indexes' => [
      'room' => ['room'],
      'seller' => ['seller'],
      'buyer' => ['buyer'],
    ],
  ];
  return $schema;
}

/**
 * Update schema module.
 *
 * Adding field type into table dm_chat_message.
 */
function dm_chat_update_7001() {
  if(!db_field_exists('dm_chat_message', 'type')) {
    db_add_field('dm_chat_message', 'type', array(
      'type' => 'varchar',
      'length' => 50,
      'not null' => TRUE,
      'description' => 'Type message (insert from method)',
    ));
  }
}

/**
 * Create new database table {dm_chat_event}.
 *
 * Tags for events.
 */
function dm_chat_update_7003() {

  $schema['dm_chat_event'] = [
    'fields' => [
      'id' => [
        'description' => 'Primary key',
        'type' => 'serial',
        'size'=>'normal',
        'not null' => TRUE
      ],
      'room' => [
        'description' => 'Name chat room',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'uid' => [
        'description' => 'User ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'pin' => [
        'description' => 'Event pin message',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
      'archive' => [
        'description' => 'Event archive message',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
      'delete' => [
        'description' => 'Event delete',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
      'viewed' => [
        'description' => 'Viewed last message',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'room' => ['room'],
      'uid' => ['uid'],
    ],
  ];

  db_create_table('dm_chat_event', $schema['dm_chat_event']);
}
